//Using SDL, SDL_image, standard IO, and strings
#include "SDL2/SDL.h"
#include "SDL2/SDL_image.h"
#include "SDL2/SDL_mixer.h"
#include <stdio.h>
#include <string>
#include "Player.h"
#include "Constants.h"
#include "Prof.h"
#include <iostream>
//#include "Locations.cpp"

//Starts up SDL and creates window
bool init();

//Loads media
bool loadMedia();

//Frees media and shuts down SDL
void close();

//The window we'll be rendering to

SDL_Window* gWindow = NULL;

//The window renderer
SDL_Renderer* gRenderer = NULL;

//Scene textures
WTexture gPlayer1Texture;
WTexture gPlayer2Texture;
WTexture gBackgroundTexture;
WTexture gRoadTexture;
WTexture gProfTexture;
WTexture gBuildingTexture;
WTexture gGrassTexture;
WTexture gFoodTexture;
WTexture gWinTexture;
WTexture gLoseTexture;
Mix_Music *gMusic = NULL;


bool visit1 = false;
bool visit2 = false;
bool visit3 = false;
bool visit4 = false;
bool visit5 = false;
bool visit6 = false;
bool visit7 = false;


int map[70][100] = {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,0,3,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,1,0,0,0,0,0,0,3,3,3,3,0,0,0,0,3,3,3,3,3,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,3,3,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,1,3,3,3,0,0,0,1,3,3,3,3,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,3,3,0,0,0,0,1,0,0,0,3,0,0,1,1,3,3,3,3,1,1,0,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,3,3,3,1,1,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,3,3,3,1,1,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,3,3,1,1,0,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,3,3,3,0,1,1,0,0,0,0,0,1,1,0,3,3,0,0,1,1,0,3,0,1,1,0,0,1,1,3,0,1,1,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,3,3,3,1,1,1,0,0,0,2,0,1,1,0,3,3,0,0,1,1,0,3,0,1,1,0,0,1,1,3,1,1,0,0,0,1,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},{0,0,3,3,3,0,1,1,0,0,2,2,0,1,1,0,0,0,0,0,1,1,0,3,3,1,1,0,3,0,1,1,1,1,0,0,0,1,1,1,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,3,3,1,1,1,0,3,3,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,0,0,2,2,0,1,1,0,0,3,3,3,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,3,0,0,1,1,1,0,3,3,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,0,2,0,0,0,1,1,0,0,3,3,3,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,0,2,0,0,0,1,1,0,0,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,3,3,0,1,1,1,0,3,3,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,0,2,0,0,0,1,1,0,3,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,3,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,3,3,0,1,1,1,0,3,3,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,2,2,2,2,0,1,1,1,3,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,3,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,1,1,1,1,1,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,3,3,0,1,1,1,0,0,0,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,2,2,2,2,0,1,1,0,3,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,0,0,3,3,3,3,0,0,3,3,3,3,0,0,1,1,1,1,2,2,1,1,0,1,1,1,0,0,0,0,0,0,0,3,3,3,3,0,1,1,1,0,3,3,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,2,2,2,2,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,3,3,3,3,0,0,3,3,3,3,0,0,1,1,1,1,2,2,2,2,1,1,1,1,1,0,0,0,0,0,0,0,3,3,3,3,0,1,1,1,0,3,3,1,1,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,3,3,3,0,0,3,3,3,3,0,0,1,1,1,1,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,0,1,1,0,0,2,2,0,1,1,0,3,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,3,3,3,3,3,3,1,1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,3,3,3,0,1,1,0,0,2,2,0,1,1,0,3,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,3,3,3,3,0,3,1,1,1,1,0,0,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,3,3,3,0,1,1,0,0,2,2,0,1,1,0,3,3,3,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,3,3,0,0,1,1,1,1,3,3,3,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,0,0,1,1,0,0,0,0,1,1,0},{0,0,3,3,3,1,1,1,0,0,2,2,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,3,3,3,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,0,0,1,1,3,3,3,3,1,1,0},{0,0,3,3,3,0,1,1,0,0,0,0,0,1,1,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,3,3,3,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,3,3,1,1,3,3,3,3,1,1,0},{0,0,0,0,0,0,1,1,0,2,2,2,0,1,1,0,0,3,3,0,1,1,0,0,0,0,1,1,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,3,3,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,3,3,1,1,3,3,3,3,1,1,0},{0,0,0,0,0,0,1,1,0,2,2,2,0,1,1,0,0,3,3,0,1,1,0,0,0,0,1,1,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,3,3,1,1,3,3,3,3,1,1,0},{0,0,0,0,0,0,1,1,0,2,2,2,0,1,1,0,0,3,3,0,1,1,0,0,0,0,1,1,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,3,3,0,1,1,0,1,1,1,1,1,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,3,0,0,1,1,0,0,0,0,1,1,0},{0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,3,3,3,3,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,3,3,0,0,1,1,1,1,1,0,0,1,1,0,0,3,0,0,0,0,0,0,0,0,3,3,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,3,3,3,3,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,1,1,1,1,0,3,0,0,1,1,0,0,0,3,0,0,0,0,0,0,3,3,0,0,0,1,1,3,0,0,0,1,1,0,0,1,1,0,1,1,0},{0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,3,0,0,1,1,0,3,3,0,0,0,0,0,0,0,0,0,0,1,1,3,3,0,0,1,1,0,3,1,1,0,0,1,1,0},{0,0,3,3,3,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,3,0,0,0,0,3,0,0,0,0,0,0,0,3,3,0,1,1,0,3,0,3,1,1,0,3,1,1,0,0,0,1,1,0},{0,0,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,3,0,0,3,3,0,0,0,0,0,0,3,3,1,1,0,0,0,3,1,1,3,0,1,1,0,0,0,0,1,1,0},{0,0,3,3,3,0,1,1,2,2,2,2,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0},{0,0,0,0,0,0,1,1,2,2,2,2,2,1,1,0,0,0,0,0,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,3,3,0,3,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0},{0,0,0,0,0,0,1,1,2,2,2,2,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0},{0,0,0,0,0,0,1,1,2,2,2,2,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0},{0,0,3,3,3,0,1,1,0,0,0,0,0,1,1,0,3,3,3,0,1,1,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,3,0,3,0,1,1,0,3,0,1,0,0,0,0,0,1,1,0},{0,0,3,3,3,0,1,1,1,1,1,1,1,1,1,0,3,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,3,0,3,0,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0},{0,0,3,3,3,1,1,1,1,1,1,1,1,1,1,0,3,3,3,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,3,3,3,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,1,1,1,1,1,1,0,0,0,0,0,0,3,3,3,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},{0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,1,0,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,1,0,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,1,0,3,3,3,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,3,1,3,3,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,3,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{3,3,1,0,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}}

;



bool init(){
	//Initialization flag
	bool success = true;

	//Initialize SDL
	if( SDL_Init( SDL_INIT_VIDEO ) < 0 ){
		printf( "SDL could not initialize! SDL Error: %s\n", SDL_GetError() );
		success = false;
	}
	else{
		//Set texture filtering to linear
		if( !SDL_SetHint( SDL_HINT_RENDER_SCALE_QUALITY, "1" ) ){
			printf( "Warning: Linear texture filtering not enabled!" );
		}

		//Create window
		gWindow = SDL_CreateWindow( "GAME", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN );
		if( gWindow == NULL ){
			printf( "Window could not be created! SDL Error: %s\n", SDL_GetError() );
			success = false;
		}
		else{
			//Create vsynced renderer for window
			gRenderer = SDL_CreateRenderer( gWindow, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC );
			if( gRenderer == NULL ){
				printf( "Renderer could not be created! SDL Error: %s\n", SDL_GetError() );
				success = false;
			}
			else{
				//Initialize renderer color
				SDL_SetRenderDrawColor( gRenderer, 0xFF, 0xFF, 0xFF, 0xFF );

				//Initialize PNG loading
				int imgFlags = IMG_INIT_PNG;
				if( !( IMG_Init( imgFlags ) & imgFlags ) )
				{
					printf( "SDL_image could not initialize! SDL_image Error: %s\n", IMG_GetError() );
					success = false;
				}
				if( Mix_OpenAudio( 44100, MIX_DEFAULT_FORMAT, 2, 2048 ) < 0 )
				{
					printf( "SDL_mixer could not initialize! SDL_mixer Error: %s\n", Mix_GetError() );
					success = false;
				}
			}
		}
	}

	return success;
}

bool loadMedia(){
	//Loading success flag
	bool success = true;
	gMusic = Mix_LoadMUS("Resources/song.mp3");
	if( !gPlayer1Texture.loadFromFile(gRenderer, "Resources/minion.png" ) ){
		printf( "Failed to load dot texture!\n" );
		success = false;
	}
	if( !gPlayer2Texture.loadFromFile(gRenderer, "Resources/minion2.png" ) ){
		printf( "Failed to load dot texture!\n" );
		success = false;
	}
	if( !gBackgroundTexture.loadFromFile(gRenderer, "Resources/backg.png" ) ){
		printf( "Failed to load background texture image!\n" );
		success = false;
	}
	if( !gRoadTexture.loadFromFile(gRenderer, "Resources/smallroad.png" ) ){
		printf( "Failed to load tile texture image!\n" );
		success = false;
	}
	if( !gBuildingTexture.loadFromFile(gRenderer, "Resources/build.png" ) ){
		printf( "Failed to load tile texture image!\n" );
		success = false;
	}
	if( !gGrassTexture.loadFromFile(gRenderer, "Resources/smallgrass.png" ) ){
		printf( "Failed to load tile texture image!\n" );
		success = false;
	}
	if(!gProfTexture.loadFromFile(gRenderer, "Resources/professor.png")){
		printf("Failed to load Prof texture image!\n");
		success = false;
	}if(!gFoodTexture.loadFromFile(gRenderer, "Resources/salad.png")){
		printf("Failed to load Prof texture image!\n");
		success = false;
	}if(!gWinTexture.loadFromFile(gRenderer, "Resources/win.png")){
		printf("Failed to load Prof texture image!\n");
		success = false;
	}if(!gLoseTexture.loadFromFile(gRenderer, "Resources/lose.png")){
		printf("Failed to load Prof texture image!\n");
		success = false;
	}
    if(gMusic == NULL){
		printf("Failed to load music!\n");
		success = false;
	}


	return success;
}

void close(){
	//Free loaded images
	gPlayer1Texture.free();
	gPlayer2Texture.free();
	gBackgroundTexture.free();
	gRoadTexture.free();
	gBuildingTexture.free();
	gGrassTexture.free();
	gProfTexture.free();
	Mix_FreeMusic(gMusic);
	
	//Destroy window	
	SDL_DestroyRenderer( gRenderer );
	SDL_DestroyWindow( gWindow );
	gWindow = NULL;
	gRenderer = NULL;

	//Quit SDL subsystems
	Mix_Quit();
	IMG_Quit();
	SDL_Quit();
}

int main( int argc, char* args[] ){
	//Start up SDL and create window

	if( !init() ){
		printf( "Failed to initialize!\n" );
	}
	else{
		//Load media
		if( !loadMedia() ){
			printf( "Failed to load media!\n" );
		}
		else{
			//Main loop flag
			bool quit = false;
			Uint32 startTime = SDL_GetTicks();

			//Event handler
			SDL_Event e;

			//The dot that will be moving around on the screen
			Player player1(72, 300);
			Player player2(1032, 360);
			Prof Prof1(12,600);
			Prof Prof2(1152, 432);
			Prof Prof3(660, 648);
			Prof Prof4(712, 180);
			Prof Prof5(348, 250);

			

			//While application is running
			while( !quit ){
				//Handle events on queue
				while( SDL_PollEvent( &e ) != 0 ){
					//User requests quit
					if( e.type == SDL_QUIT ){
						quit = true;
					}

					//Handle input for the dot
					player1.handleEvent( e );
					player2.handleEvent( e );
				
				
				}

				//Mix_PlayMusic(gMusic, -1);

                player1.mMentalHealth -= SDL_GetTicks();
                player2.mMentalHealth -= SDL_GetTicks();
				//Move the dot
				player1.movePlayer(map);
				player2.movePlayer(map);
				Prof1.moveProf(player1 , player2, map);
				Prof2.moveProf(player1 , player2, map);
				Prof3.moveProf(player1 , player2, map);
				Prof4.moveProf(player1 , player2, map);
				Prof5.moveProf(player1 , player2, map);

				Prof1.collided(player1);
				Prof1.collided(player2);
				Prof2.collided(player1);
				Prof2.collided(player2);
				Prof3.collided(player1);
				Prof3.collided(player2);
				Prof4.collided(player1);
				Prof4.collided(player2);
				Prof5.collided(player1);
				Prof5.collided(player2);

                startTime = SDL_GetTicks();
                if(Prof1.collided(player1) || Prof2.collided(player1) || Prof3.collided(player1) || Prof4.collided(player1) || Prof5.collided(player1)){
                        player1.transport();
                }
                if(Prof1.collided(player2) || Prof2.collided(player2) || Prof3.collided(player2) || Prof4.collided(player2) || Prof5.collided(player2)){
                        player2.transport();
                }
                    
                
                if(player1.reachedDestination(720,420) && visit1 == false){
                    visit1 = true;
                    player1.mScore += 10;
                }if(player2.reachedDestination(720,420) && visit1 == false){
                    visit1 = true;
                    player2.mScore += 10;
                }
                if(player1.reachedDestination(408,516) && visit2 == false){
                    visit2 = true;
                    player1.mScore += 10;
                }if(player2.reachedDestination(408,516) && visit2 == false){
                    visit2 = true;
                    player2.mScore += 10;
                }
                if(player1.reachedDestination(252,420) && visit3 == false){
                    visit3 = true;
                    player1.mScore += 10;
                }if(player2.reachedDestination(252,420) && visit3 == false){
                    visit3 = true;
                    player2.mScore += 10;
                }if(player1.reachedDestination(84,660) && visit4 == false){
                    visit4 = true;
                    player1.mScore += 10;
                }if(player2.reachedDestination(84,660) && visit4 == false){
                    visit4 = true;
                    player2.mScore += 10;
                }if(player1.reachedDestination(540,552) && visit5 == false){
                    visit5 = true;
                    player1.mScore += 10;
                }if(player2.reachedDestination(540,552) && visit5 == false){
                    visit5 = true;
                    player2.mScore += 10;
                }if(player1.reachedDestination(396,648) && visit6 == false){
                    visit6 = true;
                    player1.mScore += 10;
                }if(player2.reachedDestination(396,648) && visit6 == false){
                    visit6 = true;
                    player2.mScore += 10;
                }if(player1.reachedDestination(348,312) && visit7 == false){
                    visit7 = true;
                    player1.mScore += 10;
                }if(player2.reachedDestination(348,312) && visit7 == false){
                    visit7 = true;
                    player2.mScore += 10;
                }

			
				
                


				//Clear screen
				SDL_SetRenderDrawColor( gRenderer, 0xFF, 0xFF, 0xFF, 0xFF );
				SDL_RenderClear( gRenderer );

				
				
				//Render objects
				
				for (int i = 0 ; i < 70 ; i++){
					for (int j = 0 ; j < 100 ; j ++){
						if (map[i][j] == 0){
							gBackgroundTexture.render(gRenderer, TILE_SIZE*j,TILE_SIZE*i, TILE_SIZE,TILE_SIZE);
						}else if(map[i][j] == 1){
							gRoadTexture.render(gRenderer, TILE_SIZE*j,TILE_SIZE*i, TILE_SIZE, TILE_SIZE);
						}else if(map[i][j] == 2){
							gGrassTexture.render(gRenderer, TILE_SIZE*j,TILE_SIZE*i, TILE_SIZE, TILE_SIZE);
						}else if(map[i][j] == 3){
							gBuildingTexture.render(gRenderer, TILE_SIZE*j,TILE_SIZE*i, TILE_SIZE, TILE_SIZE);
						}
					}
				}	
			 

                if(visit1 == false){
                    gFoodTexture.render(gRenderer, 720,420, TILE_SIZE, TILE_SIZE);
                }
                if(visit2 == false){
                    gFoodTexture.render(gRenderer, 408,516, TILE_SIZE, TILE_SIZE);
                }
                if(visit3 == false){
                    gFoodTexture.render(gRenderer, 252,420, TILE_SIZE, TILE_SIZE);
                }
                if(visit4 == false){
                    gFoodTexture.render(gRenderer, 84,660, TILE_SIZE, TILE_SIZE);
                }
                if(visit5 == false){
                    gFoodTexture.render(gRenderer, 540,552, TILE_SIZE, TILE_SIZE);
                }
                if(visit6 == false){
                    gFoodTexture.render(gRenderer, 396,648, TILE_SIZE, TILE_SIZE);
                }
                if(visit7 == false){
                    gFoodTexture.render(gRenderer, 348,312, TILE_SIZE, TILE_SIZE);
                }

				player1.renderPlayer(gRenderer, gPlayer1Texture);
				player2.renderPlayer(gRenderer, gPlayer2Texture);
				Prof1.renderProf(gRenderer, gProfTexture);
				Prof2.renderProf(gRenderer, gProfTexture);
				Prof3.renderProf(gRenderer, gProfTexture);
				Prof4.renderProf(gRenderer, gProfTexture);
				Prof5.renderProf(gRenderer, gProfTexture);

                if(player1.mMentalHealth > 1800000){
                    SDL_RenderClear( gRenderer );
                    gLoseTexture.render(gRenderer, 0,0, SCREEN_WIDTH, SCREEN_HEIGHT);
                    

                }
                if(player1.mScore + player2.mScore == 70){
                    SDL_RenderClear( gRenderer );
                    gWinTexture.render(gRenderer, 0,0, SCREEN_WIDTH, SCREEN_HEIGHT);
                   
                }

				//Update screen
				SDL_RenderPresent( gRenderer );
                //std::cout<<SDL_GetTicks()<<std::endl;
                std::cout<<player1.mMentalHealth<<std::endl;
				
			}
		}
	}

	//Free resources and close SDL
	close();

	return 0;
}
